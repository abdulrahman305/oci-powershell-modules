/*
 * NOTE: Generated using OracleSDKGenerator, API Version: 20200630
 * DO NOT EDIT this file manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

using System;
using System.Management.Automation;
using Oci.ApmtracesService.Requests;
using Oci.ApmtracesService.Responses;
using Oci.ApmtracesService.Models;
using Oci.Common.Model;

namespace Oci.ApmtracesService.Cmdlets
{
    [Cmdlet("Invoke", "OCIApmtracesQuery")]
    [OutputType(new System.Type[] { typeof(Oci.ApmtracesService.Models.QueryResultResponse), typeof(Oci.ApmtracesService.Responses.QueryResponse) })]
    public class InvokeOCIApmtracesQuery : OCIQueryCmdlet
    {
        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"The APM Domain ID for the intended request.")]
        public string ApmDomainId { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Include spans that have a `spanStartTime` equal to or greater than this value.")]
        public System.Nullable<System.DateTime> TimeSpanStartedGreaterThanOrEqualTo { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Include spans that have a `spanStartTime`less than this value.")]
        public System.Nullable<System.DateTime> TimeSpanStartedLessThan { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Request body containing the query to be run against the trace data and to filter and retrieve trace data results.")]
        public QueryDetails QueryDetails { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Unique Oracle-assigned identifier for the request.  If you need to contact Oracle about a particular request, please provide the request ID.")]
        public string OpcRequestId { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The maximum number of items to return.")]
        public System.Nullable<int> Limit { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The page token representing the page where to start retrieving results. This is usually retrieved from a previous response.")]
        public string Page { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            QueryRequest request;

            try
            {
                request = new QueryRequest
                {
                    ApmDomainId = ApmDomainId,
                    TimeSpanStartedGreaterThanOrEqualTo = TimeSpanStartedGreaterThanOrEqualTo,
                    TimeSpanStartedLessThan = TimeSpanStartedLessThan,
                    QueryDetails = QueryDetails,
                    OpcRequestId = OpcRequestId,
                    Limit = Limit,
                    Page = Page
                };

                response = client.Query(request).GetAwaiter().GetResult();
                WriteOutput(response, response.QueryResultResponse);
                FinishProcessing(response);
            }
            catch (OciException ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
            catch (Exception ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
        }

        protected override void StopProcessing()
        {
            base.StopProcessing();
            TerminatingErrorDuringExecution(new OperationCanceledException("Cmdlet execution interrupted"));
        }

        private QueryResponse response;
    }
}
