/*
 * NOTE: Generated using OracleSDKGenerator, API Version: 20160918
 * DO NOT EDIT this file manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

using System;
using System.Management.Automation;
using Oci.ArtifactsService.Requests;
using Oci.ArtifactsService.Responses;
using Oci.ArtifactsService.Models;
using Oci.Common.Model;

namespace Oci.ArtifactsService.Cmdlets
{
    [Cmdlet("Get", "OCIArtifactsGenericArtifactByPath")]
    [OutputType(new System.Type[] { typeof(Oci.ArtifactsService.Models.GenericArtifact), typeof(Oci.ArtifactsService.Responses.GetGenericArtifactByPathResponse) })]
    public class GetOCIArtifactsGenericArtifactByPath : OCIArtifactsCmdlet
    {
        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository.

Example: `ocid1.artifactrepository.oc1..exampleuniqueID`")]
        public string RepositoryId { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"A user-defined path to describe the location of an artifact. You can use slashes to organize the repository, but slashes do not create a directory structure. An artifact path does not include an artifact version.

Example: `project01/my-web-app/artifact-abc`")]
        public string ArtifactPath { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"A user-defined string to describe the artifact version.

Example: `1.1.2` or `1.2-beta-2`")]
        public string Version { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Unique identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.")]
        public string OpcRequestId { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            GetGenericArtifactByPathRequest request;

            try
            {
                request = new GetGenericArtifactByPathRequest
                {
                    RepositoryId = RepositoryId,
                    ArtifactPath = ArtifactPath,
                    Version = Version,
                    OpcRequestId = OpcRequestId
                };

                response = client.GetGenericArtifactByPath(request).GetAwaiter().GetResult();
                WriteOutput(response, response.GenericArtifact);
                FinishProcessing(response);
            }
            catch (OciException ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
            catch (Exception ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
        }

        protected override void StopProcessing()
        {
            base.StopProcessing();
            TerminatingErrorDuringExecution(new OperationCanceledException("Cmdlet execution interrupted"));
        }

        private GetGenericArtifactByPathResponse response;
    }
}
