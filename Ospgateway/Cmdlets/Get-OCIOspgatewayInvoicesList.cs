/*
 * NOTE: Generated using OracleSDKGenerator, API Version: 20191001
 * DO NOT EDIT this file manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;
using Oci.OspgatewayService.Requests;
using Oci.OspgatewayService.Responses;
using Oci.OspgatewayService.Models;
using Oci.Common.Model;

namespace Oci.OspgatewayService.Cmdlets
{
    [Cmdlet("Get", "OCIOspgatewayInvoicesList")]
    [OutputType(new System.Type[] { typeof(Oci.OspgatewayService.Models.InvoiceCollection), typeof(Oci.OspgatewayService.Responses.ListInvoicesResponse) })]
    public class GetOCIOspgatewayInvoicesList : OCIInvoiceServiceCmdlet
    {
        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"The home region's public name of the logged in user.")]
        public string OspHomeRegion { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.")]
        public string CompartmentId { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.")]
        public string OpcRequestId { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The invoice query param (not unique).")]
        public string InvoiceId { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter to only return resources that match the given type exactly.")]
        public System.Collections.Generic.List<Oci.OspgatewayService.Requests.ListInvoicesRequest.TypeEnum> Type { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter to only return resources that match the given value. Looking for partial matches in the following fileds: Invoice No., Reference No. (plan number), Payment Ref, Total Amount(plan number), Balance Due(plan number) and Party/Customer Name")]
        public string SearchText { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"description: Start time (UTC) of the target invoice date range for which to fetch invoice data (inclusive).")]
        public System.Nullable<System.DateTime> TimeInvoiceStart { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"description: End time (UTC) of the target invoice date range for which to fetch invoice data (exclusive).")]
        public System.Nullable<System.DateTime> TimeInvoiceEnd { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"description: Start time (UTC) of the target payment date range for which to fetch invoice data (inclusive).")]
        public System.Nullable<System.DateTime> TimePaymentStart { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"description: End time (UTC) of the target payment date range for which to fetch invoice data (exclusive).")]
        public System.Nullable<System.DateTime> TimePaymentEnd { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter to only return resources that match one of the status elements.")]
        public System.Collections.Generic.List<Oci.OspgatewayService.Requests.ListInvoicesRequest.StatusEnum> Status { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"For list pagination. The value of the opc-next-page response header from the previous ""List"" call.")]
        public string Page { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"For list pagination. The maximum number of results per page, or items to return in a paginated ""List"" call.", ParameterSetName = LimitSet)]
        public System.Nullable<int> Limit { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The field to sort by. Only one field can be selected for sorting.")]
        public System.Nullable<Oci.OspgatewayService.Requests.ListInvoicesRequest.SortByEnum> SortBy { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The sort order to use (ascending or descending).")]
        public System.Nullable<Oci.OspgatewayService.Requests.ListInvoicesRequest.SortOrderEnum> SortOrder { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Fetches all pages of results.", ParameterSetName = AllPageSet)]
        public SwitchParameter All { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            ListInvoicesRequest request;

            try
            {
                request = new ListInvoicesRequest
                {
                    OspHomeRegion = OspHomeRegion,
                    CompartmentId = CompartmentId,
                    OpcRequestId = OpcRequestId,
                    InvoiceId = InvoiceId,
                    Type = Type,
                    SearchText = SearchText,
                    TimeInvoiceStart = TimeInvoiceStart,
                    TimeInvoiceEnd = TimeInvoiceEnd,
                    TimePaymentStart = TimePaymentStart,
                    TimePaymentEnd = TimePaymentEnd,
                    Status = Status,
                    Page = Page,
                    Limit = Limit,
                    SortBy = SortBy,
                    SortOrder = SortOrder
                };
                IEnumerable<ListInvoicesResponse> responses = GetRequestDelegate().Invoke(request);
                foreach (var item in responses)
                {
                    response = item;
                    WriteOutput(response, response.InvoiceCollection, true);
                }
                if(!ParameterSetName.Equals(AllPageSet) && !ParameterSetName.Equals(LimitSet) && response.OpcNextPage != null)
                {
                    WriteWarning("This operation supports pagination and not all resources were returned. Re-run using the -All option to auto paginate and list all resources.");
                }
                FinishProcessing(response);
            }
            catch (OciException ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
            catch (Exception ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
        }

        protected override void StopProcessing()
        {
            base.StopProcessing();
            TerminatingErrorDuringExecution(new OperationCanceledException("Cmdlet execution interrupted"));
        }

        private RequestDelegate GetRequestDelegate()
        {
            IEnumerable<ListInvoicesResponse> DefaultRequest(ListInvoicesRequest request) => Enumerable.Repeat(client.ListInvoices(request).GetAwaiter().GetResult(), 1);
            if (ParameterSetName.Equals(AllPageSet))
            {
                return req => client.Paginators.ListInvoicesResponseEnumerator(req);
            }
            return DefaultRequest;
        }

        private ListInvoicesResponse response;
        private delegate IEnumerable<ListInvoicesResponse> RequestDelegate(ListInvoicesRequest request);
        private const string AllPageSet = "AllPages";
        private const string LimitSet = "Limit";
    }
}
