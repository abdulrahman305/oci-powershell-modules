/*
 * NOTE: Generated using OracleSDKGenerator, API Version: 20190325
 * DO NOT EDIT this file manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

using System;
using System.Management.Automation;
using Oci.DatacatalogService.Requests;
using Oci.DatacatalogService.Responses;
using Oci.DatacatalogService.Models;
using Oci.Common.Model;

namespace Oci.DatacatalogService.Cmdlets
{
    [Cmdlet("Invoke", "OCIDatacatalogRecommendations")]
    [OutputType(new System.Type[] { typeof(Oci.DatacatalogService.Models.RecommendationCollection), typeof(Oci.DatacatalogService.Responses.RecommendationsResponse) })]
    public class InvokeOCIDatacatalogRecommendations : OCIDataCatalogCmdlet
    {
        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Unique catalog identifier.")]
        public string CatalogId { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter used to return only recommendations of the specified type.")]
        public System.Collections.Generic.List<Oci.DatacatalogService.Models.RecommendationType> RecommendationType { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter used to provide the unique identifier of the source object, for which a list of recommendations will be returned for review.")]
        public string SourceObjectKey { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter used to provide the type of the source object, for which a list of recommendations will be returned for review.")]
        public System.Nullable<Oci.DatacatalogService.Models.RecommendationResourceType> SourceObjectType { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter used to return only recommendations having the requested status.")]
        public System.Nullable<Oci.DatacatalogService.Models.RecommendationStatus> RecommendationStatus { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The client request ID for tracing.")]
        public string OpcRequestId { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            RecommendationsRequest request;

            try
            {
                request = new RecommendationsRequest
                {
                    CatalogId = CatalogId,
                    RecommendationType = RecommendationType,
                    SourceObjectKey = SourceObjectKey,
                    SourceObjectType = SourceObjectType,
                    RecommendationStatus = RecommendationStatus,
                    OpcRequestId = OpcRequestId
                };

                response = client.Recommendations(request).GetAwaiter().GetResult();
                WriteOutput(response, response.RecommendationCollection);
                FinishProcessing(response);
            }
            catch (OciException ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
            catch (Exception ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
        }

        protected override void StopProcessing()
        {
            base.StopProcessing();
            TerminatingErrorDuringExecution(new OperationCanceledException("Cmdlet execution interrupted"));
        }

        private RecommendationsResponse response;
    }
}
